{
  "fileName": "VersionContext.scala",
  "filePath": "common/shared/src/main/scala/sigmastate/VersionContext.scala",
  "url": "sigmastate-interpreterhttps://github.com/ScorexFoundation/sigmastate-interpreter/common/shared/src/main/scala/sigmastate/VersionContext.scala",
  "summary": "The `VersionContext` object in the `sigmastate` package represents the currently activated protocol version and the currently executed ErgoTree version. It is used to version the code across the whole repository. This object is created with two parameters: `activatedVersion` and `ergoTreeVersion`, which are both of type `Byte`. Once set in a `DynamicVariable`, these parameters can be accessed everywhere on the current thread. \n\nThe `VersionContext` object has two methods: `isJitActivated` and `isErgoTreeVersionGreaterV1`. The `isJitActivated` method returns `true` if the activated script version of Ergo protocol on the network is greater than v1. The `isErgoTreeVersionGreaterV1` method returns `true` if the version of ErgoTree being executed is greater than v1. \n\nThe `VersionContext` object also has a companion object with several methods and variables. The `MaxSupportedScriptVersion` variable represents the maximum version of ErgoTree supported by this interpreter release. The `JitActivationVersion` variable represents the first version of ErgoTree starting from which the JIT costing interpreter must be used. \n\nThe `_defaultContext` variable represents the default `VersionContext` object, which is used to version the code across the whole repository. The `_versionContext` variable is a `DynamicVariable` that represents the current `VersionContext` attached to the current thread. The `current` method returns the current `VersionContext` attached to the current thread. The `withVersions` method executes the given block under the given version context attached to the current thread. The `checkVersions` method checks if the version context has the given versions. \n\nOverall, the `VersionContext` object and its companion object are used to manage the versioning of the code across the whole repository. It allows for the activation of different versions of the Ergo protocol and ErgoTree, and ensures that the correct versions are being used throughout the codebase.",
  "questions": "1. What is the purpose of the VersionContext class?\n- The VersionContext class represents the currently activated protocol version and currently executed ErgoTree version, which can be accessed everywhere on the current thread.\n\n2. What is the significance of the JitActivationVersion?\n- The JitActivationVersion is the first version of ErgoTree starting from which the JIT costing interpreter must be used, and it must also be used for all subsequent versions.\n\n3. How can a developer execute a block of code with specific versions using the VersionContext?\n- A developer can use the withVersions method of the VersionContext to execute a block of code with specific activatedVersion and ergoTreeVersion parameters."
}